package com.dalogin.utils;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Enumeration;
import java.util.Properties;

import org.apache.log4j.Logger;


public class PropertyUtils {

	/**
	 * 
	 */
	private static Properties p = new Properties();
	
	/**
	 * 
	 */
	private static Logger log = Logger.getLogger(Logger.class.getName());
	
	/**
	 * 
	 * 
	 */
	static {
		String workingDir = System.getProperty("user.dir");

		try {
			loadPropertyFile(workingDir + File.separator + "properties.properties");

		} catch (FileNotFoundException realCause) {
			log.info(workingDir + File.separator + "properties.properties was not found");

		} catch (IOException realCause) {
			log.info("Error");

		}
	}

	/**
	 * 
	 * @param propertyFileName
	 * @throws FileNotFoundException
	 * @throws IOException
	 */
	private static void loadPropertyFile(String propertyFileName)
			throws FileNotFoundException, IOException {
		InputStream is;

		is = new FileInputStream(new File(propertyFileName));
		DataInputStream in = new DataInputStream(is);
		BufferedReader br = new BufferedReader(new InputStreamReader(in));

		p.load(br);
		log.info(propertyFileName + " is loaded.");
		in.close();
		br.close();
	}

	/**
	 * 
	 * @param propertyKey
	 * @return
	 */
	public static String getProperty(String propertyKey) {
		
		String propertyValue = p.getProperty(propertyKey.trim());
		
		try {
			
			propertyValue.trim();
			
		} catch (Exception e) {
			
			log.info("The property key: " + propertyKey + " is missing!");
			
		}

		return propertyValue.trim();
	}

	/**
	 * 
	 * 
	 * @param propertyKey
	 * @param value
	 * @throws FileNotFoundException
	 * @throws IOException
	 */
	public static void setProperty(String propertyKey, String value) throws FileNotFoundException, IOException {
		
		p.setProperty(propertyKey, value);
		
	}

	/**
	 * 
	 * 
	 * @throws FileNotFoundException
	 * @throws IOException
	 */
	public static void listProperties() throws FileNotFoundException, IOException {

		for (Enumeration<?> e = p.propertyNames(); e.hasMoreElements();)

			while (e.hasMoreElements()) {
				String propertyKey = (String) e.nextElement();
				log.info(propertyKey + " -- " + p.getProperty(propertyKey));

			}
	}
}
